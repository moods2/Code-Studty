/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-07-28 05:36:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ex09_005fsubmit_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title></title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css\">\r\n");
      out.write("<style>\r\n");
      out.write("\tform > div {\r\n");
      out.write("\t\tmargin-bottom: 15px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#feedback { font-size: 1.4em; }\r\n");
      out.write("\t#selectable .ui-selecting { background: #FECA40; }\r\n");
      out.write("\t#selectable .ui-selected { background: #F39814; color: white; }\r\n");
      out.write("\t#selectable { list-style-type: none; margin: 0; padding: 0; width: 60%; }\r\n");
      out.write("\t#selectable li { margin: 3px; padding: 0.4em; font-size: 1.4em; height: 18px; }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<h1>데이터 전송하기</h1>\r\n");
      out.write("\t\r\n");
      out.write("\t<form method=\"POST\" action=\"ex09_action.jsp\">\r\n");
      out.write("\t\t<div><input type=\"text\" name=\"name\" placeholder=\"이름\"></div>\r\n");
      out.write("\t\t<div><input type=\"number\" name=\"age\" placeholder=\"나이\"></div>\r\n");
      out.write("\t\t<div><input type=\"submit\" value=\"보내기\"></div>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<h1>폼 컨트롤 전송하기</h1>\r\n");
      out.write("\t\r\n");
      out.write("\t<form method=\"POST\" action=\"ex09_action.jsp\">\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t텍스트 박스:\r\n");
      out.write("\t\t\t<input type=\"text\" name=\"txt1\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t암호 상자:\r\n");
      out.write("\t\t\t<input type=\"password\" name=\"pw1\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t다중 라인:\r\n");
      out.write("\t\t\t<textarea name=\"txt2\" cols=\"50\" rows=\"5\"></textarea>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t체크 박스\r\n");
      out.write("\t\t\t<input type=\"checkbox\" name=\"cb1\" value=\"강아지\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t체크 박스\r\n");
      out.write("\t\t\t<input type=\"checkbox\" name=\"cb2\" value=\"m1\"> 운동\r\n");
      out.write("\t\t\t<input type=\"checkbox\" name=\"cb3\" value=\"m2\"> 독서\r\n");
      out.write("\t\t\t<input type=\"checkbox\" name=\"cb4\" value=\"m3\"> 낮잠\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t체크 박스\r\n");
      out.write("\t\t\t<input type=\"checkbox\" name=\"cb\" value=\"m1\"> 운동\r\n");
      out.write("\t\t\t<input type=\"checkbox\" name=\"cb\" value=\"m2\"> 독서\r\n");
      out.write("\t\t\t<input type=\"checkbox\" name=\"cb\" value=\"m3\"> 낮잠\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t라디오 버튼\r\n");
      out.write("\t\t\t<input type=\"radio\" name=\"rb\" value=\"y\"> 동의함\r\n");
      out.write("\t\t\t<input type=\"radio\" name=\"rb\" value=\"n\"> 동의안함\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t셀렉트\r\n");
      out.write("\t\t\t<select name=\"sel1\">\r\n");
      out.write("\t\t\t\t<option value=\"1\">작다</option>\r\n");
      out.write("\t\t\t\t<option value=\"2\">보통이다</option>\r\n");
      out.write("\t\t\t\t<option value=\"3\">크다</option>\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t달력\r\n");
      out.write("\t\t\t<input type=\"date\" name=\"date1\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t범위\r\n");
      out.write("\t\t\t<input type=\"range\" min=\"0\" max=\"1000\" name=\"range1\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t자바 스크립트\r\n");
      out.write("\t\t\t<ol id=\"selectable\">\r\n");
      out.write("\t\t\t\t<li class=\"ui-widget-content\" data-no=\"1\">Item 1</li>\r\n");
      out.write("\t\t\t\t<li class=\"ui-widget-content\" data-no=\"2\">Item 2</li>\r\n");
      out.write("\t\t\t\t<li class=\"ui-widget-content\" data-no=\"3\">Item 3</li>\r\n");
      out.write("\t\t\t\t<li class=\"ui-widget-content\" data-no=\"4\">Item 4</li>\r\n");
      out.write("\t\t\t\t<li class=\"ui-widget-content\" data-no=\"5\">Item 5</li>\r\n");
      out.write("\t\t\t\t<li class=\"ui-widget-content\" data-no=\"6\">Item 6</li>\r\n");
      out.write("\t\t\t\t<li class=\"ui-widget-content\" data-no=\"7\">Item 7</li>\r\n");
      out.write("\t\t\t</ol>\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"jvalue\" id=\"jvalue\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<input type=\"submit\" value=\"전송하기\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</form>\r\n");
      out.write("\t\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\r\n");
      out.write("\t<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$( \"#selectable\" ).selectable({\r\n");
      out.write("\t\t\t  selected: function( event, ui ) {\r\n");
      out.write("\t\t\t\t  //alert(ui.selected.dataset[\"no\"]);\r\n");
      out.write("\t\t\t\t  $(\"#jvalue\").val(ui.selected.dataset[\"no\"]);\r\n");
      out.write("\t\t\t  }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

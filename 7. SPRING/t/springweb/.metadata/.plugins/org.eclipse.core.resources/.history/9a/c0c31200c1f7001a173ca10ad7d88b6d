
STS -> 개발자가 스프링을 사용해서 개발할 때 여러가지 편의를 제공

Spring MVC Project 구조

1. 소스 폴더
	a. 업무용 소스 폴더
		- src/main/java
			- 클래스 파일 집합
		- src/main/resources
			- 클래스 아닌 나머지 파일(xml 등..)
	b. 테스트용 소스 폴더
		- src/test/java
		- src/test/resources
		
2. JRE System Library
	- JRE jar

3. Maven Dependencies
	- 메이븐이 관리하는 라이브러리 폴더
	
4. src
	- 1~3까지의 경로를 실제 물리적인 계층으로 보여주는 폴더
	
5. src > main > webapp
	- WebContent 폴더와 동일한 폴더
	- 웹 루트 폴더(***)
	
6. src> main > webapp > resources
	- 정적인 웹 자원을 넣는 폴더
	- 이미지, CSS, JavaScript 파일을 넣는 곳
	
7. src > main > webapp > WEB-INF
	- 환경 설정

8. src > main > webapp > WEB-INF > classes
	- 자바 컴파일 결과물 담는 폴더(*.class)
	
9. src > main > webapp > WEB-INF > spring
	- 스프링의 모든 환경을 하는 폴더
	- servlet-context.xml : 클라이언트 요청/응답에 관련된 환경 설정
	- root-context.xml : 스프링 전역 환경 설정

10. src > main > webapp > WEB-INF > views
	- 뷰 파일 넣는 폴더(JSP)
	
	

Spring 버전 지정
- 3.XXX -> 4.XXX
- pom.xml(메이븐 설정 파일)
	a. 자바 버전 : 1.6 -> 1.8
	b. 스프링 버전 : 3.1.1 -> 4.3.8
	c. Project Facets > Java 1.6 -> 1.8
- pom.xml 수정 -> 제대로 반영 -> Maven > Update Project


Hello
- src/main/java > com.test.spring > Hello.java // 서블릿 역할
-  src/main/webapp // 뷰 역할
	
	
프론트 컨트롤러
디스페처 서블릿 이고

카운터 역할 어디다 줄지 분배 ㅇㅇ
각각의 컨트롤러의 정보를 받아서 전달하는 역할

스프링의 컨트롤러 조작법
- 이전의 서블릿 조작법
- /src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml (<bean> 선언 or 스프링 결정)

- MVC (자바 & JSP)
- 자바 : Java Resources > src/main/java > com.test.spring
- JSP : /src/main/webapp/WEB-INF/views

- Ex03Controller.java
- ex03.jsp

- EX04Controller.java
- ex04.jsp


게시판 생성(Servlet/JSP)
- 1:1 방식

- List.java
- Add.java
- AddOk.java
- View.java

- list.jsp
- add.jsp
- view.jsp

게시판 생성(Spring)
- 1:n 방식

- BoardController.java

- list.jsp
- add.jsp
- view.jsp

















